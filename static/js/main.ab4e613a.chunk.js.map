{"version":3,"sources":["model/WorkoutModel.jsx","components/AddForm.jsx","components/WorkoutsList.jsx","App.js","reportWebVitals.js","index.js"],"names":["WorkoutModel","id","date","distance","this","AddForm","currentWorkout","handleAdd","useState","form","setForm","useEffect","handleChange","evt","target","name","value","prevForm","className","onSubmit","preventDefault","workout","shortid","generate","htmlFor","type","onChange","required","step","WorkoutsList","workouts","handleEdit","handleDelete","map","onClick","App","setWorkouts","setCurrentWorkout","sortItems","date1","date2","prevWorkouts","filter","prevWorkout","Number","sort","find","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab4e613a.chunk.js","sourcesContent":["export default class WorkoutModel {\n    constructor(id, date, distance) {\n      this.id = id;\n      this.date = date;\n      this.distance = distance;\n    }\n  }\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport WorkoutModel from '../model/WorkoutModel';\nimport shortid from 'shortid';\n\nconst AddForm = ({ currentWorkout, handleAdd }) => {\n  const [form, setForm] = useState({ date: '', distance: '' });\n\n  useEffect(() => {\n    if (currentWorkout) {\n      setForm({ date: currentWorkout.date, distance: currentWorkout.distance });\n    }\n  }, [currentWorkout]);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const workout = new WorkoutModel(\n      shortid.generate(),\n      form.date,\n      form.distance,\n    );\n    handleAdd(workout);\n    setForm({ date: '', distance: '' });\n  };\n\n  return (\n    <form className=\"ui form\" onSubmit={handleSubmit}>\n      <div className=\"two fields\">\n        <div className=\"field\">\n          <label htmlFor=\"date\">Дата</label>\n          <div className=\"ui input left icon\">\n            <i className=\"calendar icon\"></i>\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"date\"\n              className=\"ui calendar\"\n              value={form.date}\n              onChange={handleChange}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"distance\">Пройдено (км)</label>\n          <input\n            type=\"number\"\n            step=\"any\"\n            name=\"distance\"\n            id=\"distance\"\n            value={form.distance}\n            onChange={handleChange}\n            required\n          />\n        </div>\n      </div>\n      <button className=\"ui button\" type=\"submit\">\n        Добавить\n      </button>\n    </form>\n  );\n};\n\nAddForm.propTypes = {\n  setWorkouts: PropTypes.func.isRequired,\n};\n\nexport default AddForm;\n","import React from 'react';\n\nconst WorkoutsList = ({ workouts, handleEdit, handleDelete }) => {\n  return (\n    <table className=\"ui basic table\">\n      <thead>\n        <tr>\n          <th>Дата</th>\n          <th>Пройдено (км)</th>\n          <th>Действия</th>\n        </tr>\n      </thead>\n      <tbody>\n        {workouts.map(workout => (\n          <tr key={workout.id}>\n            <td>{workout.date}</td>\n            <td>{workout.distance}</td>\n            <td>\n              <button onClick={() => handleEdit(workout.id)}>\n                <i className=\"edit icon\"></i>\n              </button>\n              <button onClick={() => handleDelete(workout.id)}>\n                <i className=\"trash icon\"></i>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default WorkoutsList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport AddForm from './components/AddForm';\nimport WorkoutsList from './components/WorkoutsList';\n\nfunction App() {\n  const [workouts, setWorkouts] = useState([]);\n  const [currentWorkout, setCurrentWorkout] = useState({\n    date: '',\n    distance: '',\n  });\n\n  const sortItems = (date1, date2) => {\n    if (date1.date > date2.date) return -1;\n    if (date1.date < date2.date) return 1;\n    return 0;\n  };\n\n  const handleAdd = workout => {\n    setWorkouts(prevWorkouts => {\n      for (let prevWorkout of prevWorkouts) {\n        if (prevWorkout && prevWorkout.date === workout.date) {\n          prevWorkout.distance =\n            Number(prevWorkout.distance) + Number(workout.distance);\n          return [...prevWorkouts].sort(sortItems);\n        }\n      }\n      return [...prevWorkouts, workout].sort(sortItems);\n    });\n  };\n\n  const handleDelete = id => {\n    setWorkouts(prevWorkouts =>\n      prevWorkouts.filter(workout => workout.id !== id),\n    );\n  };\n\n  const handleEdit = id => {\n    const workout = workouts.find(item => item.id === id);\n    setCurrentWorkout({\n      date: workout.date,\n      distance: workout.distance,\n    });\n    handleDelete(workout.id);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"ui raised very padded text container segment\">\n        <AddForm\n          setWorkouts={setWorkouts}\n          handleAdd={handleAdd}\n          currentWorkout={currentWorkout}\n        />\n        <WorkoutsList\n          workouts={workouts}\n          handleEdit={handleEdit}\n          handleDelete={handleDelete}\n        />\n      </div>\n      <p>learn react</p>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}